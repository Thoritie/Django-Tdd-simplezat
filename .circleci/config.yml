version: 2
jobs:
  checkout_code:
    working_directory: ~/Django-Tdd-simplezat
    docker:
      - image: circleci/python:3.7.1
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths: .

  python_dependencies:
    working_directory: ~/Django-Tdd-simplezat
    docker:
      - image: circleci/python:3.7.1
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Dependencies
          command: |
            pip3 install pipenv 

  static_analysis:
    working_directory: ~/Django-Tdd-simplezat
    docker:
      - image: circleci/python:3.7.1
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Dependencies
          command: |
            pipenv install --dev
            pipenv run flake8

  unit_tests:
    working_directory: ~/Django-Tdd-simplezat
    docker:
      - image: circleci/python:3.7.1
      - image: circleci/postgres:11.1-alpine-ram
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Dependencies
          command: |
            pipenv install --dev
            cd simplezat
            export DATABASE_HOST=localhost pipenv run pytest

  deploy:
    working_directory: ~/Django-Tdd-simplezat
    docker:
      - image: circleci/python:3.7.1
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build Stable Images
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            
            docker build -t roseth/simplezat-nginx:stable -f nginx/Dockerfile nginx/
            docker tag roseth/simplezat-nginx:stable roseth/simplezat-nginx:$CIRCLE_SHA1
            docker push roseth/simplezat-nginx:stable
            docker push roseth/simplezat-nginx:$CIRCLE_SHA1

            docker build -t roseth/simplezat:stable -f Dockerfile.production . 
            docker tag roseth/simplezat:stable roseth/simplezat:$CIRCLE_SHA1
            docker push roseth/simplezat:stable
            docker push roseth/simplezat:$CIRCLE_SHA1
      - add_ssh_keys
      - run:
          name: Deploy to dev 
          command: |
            cd deployment
            ssh-keyscan -H 35.236.195.213 >> ~/.ssh/known_hosts
            pipenv install
            pipenv run ansible-playbook -i hosts playbooks/dev.yml --extra-vars "project_root=~/Django-Tdd-simplezat"

  deploy_prod:
    working_directory: ~/Django-Tdd-simplezat
    docker:
      - image: circleci/python:3.7.1
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Build Stable Images
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS

            docker pull roseth/simplezat-nginx:stable
            docker tag roseth/simplezat-nginx:stable roseth/simplezat-nginx:live
            docker push roseth/simplezat-nginx:live

            docker build -t roseth/simplezat:live -f Dockerfile.production . 
            docker tag roseth/simplezat:live  roseth/simplezat:$CIRCLE_SHA1
            docker push roseth/simplezat:live
            docker push roseth/simplezat:$CIRCLE_SHA1
      - add_ssh_keys
      - run:
          name: Deploy to prod 
          command: |
            cd deployment
            ssh-keyscan -H 35.246.38.77 >> ~/.ssh/known_hosts
            pipenv install
            pipenv run ansible-playbook -i hosts playbooks/prod.yml --extra-vars "project_root=~/Django-Tdd-simplezat"

  acceptance_test:
    working_directory: ~/Django-Tdd-simplezat
    docker:
      - image: circleci/node:8.11.3-browsers
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Run Acceptance test
          command: |
            cd tests
            npm install
            CYPRESS_baseUrl=http://35.236.195.213 ./node_modules/.bin/cypress run --spec 'cypress/integration/simplezat/*'

workflows:
  version: 2
  simplezat_pipeline:
    jobs:
      - checkout_code
      - python_dependencies:
          requires:
            - checkout_code
      - static_analysis:
          requires:
            - python_dependencies
      - unit_tests:
          requires:
            - python_dependencies
      - deploy:
          requires:
            - unit_tests
      - acceptance_test:
          requires:
            - deploy
      - waiting_for_approval:
          type: approval
          requires:
            - acceptance_test
      - deploy_prod:
          requires:
            - waiting_for_approval
